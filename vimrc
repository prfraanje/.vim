" Plug's   -------------------------- {{{
call plug#begin('~/.vim/plugged')
" put here the plugs
Plug 'altercation/vim-colors-solarized'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-scriptease'
Plug 'tpope/vim-commentary'
Plug 'ajh17/VimCompletesMe'
Plug 'christoomey/vim-tmux-navigator'
Plug 'taketwo/vim-ros'
Plug 'xolox/vim-misc'
Plug 'xolox/vim-notes'
Plug 'aaronbieber/vim-quicktask'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'Raimondi/delimitMate'
Plug 'sukima/xmledit'
Plug 'jez/vim-superman'
Plug 'lervag/vimtex'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'coyotebush/vim-pweave'
" Add plugins to &runtimepath
call plug#end()
" }}}

" Basic Settings -------------------- {{{
set nocompatible
let mapleader = ","
let g:mapleader = ","
let maplocalleader = '\'
let g:maplocalleader = '\'
" let maplocalleader = '.'
" let g:maplocalleader = '.'
" visibility
set number
set numberwidth=4
set relativenumber
set ttyfast
set lazyredraw
syntax enable
"set background=dark
set background=light
colorscheme solarized
set t_Co=256
set term=xterm-256color
set title
set laststatus=2
set showtabline=1
set nomodeline
set scrolloff=0
set cursorline
" highlight linenr ctermbg=lightgrey
" highlight cursorline  ctermbg=lightgrey
nnoremap <leader>zz :let &scrolloff=999-&scrolloff<CR>
" tabbing etc
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab
set autoindent
set smartindent
" Fix backspace
set backspace=indent,eol,start

"set list!
set listchars=tab:>␣,trail:␣
" formatting
" pep8->textwidth=79
set textwidth=79
set comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
set formatoptions+=tcrqn
set encoding=utf-8
set wrap
set linebreak
set showbreak="-->"
" folding
set foldlevelstart=0
set foldmethod=manual
" search
set nohlsearch
set incsearch
set ignorecase
set smartcase
set showmatch
" file handling
set autowrite
set autowriteall
"automatically change directory to file in current window
set autochdir
"set clipboard
set path=./**,../,/usr/include/**,/opt/ros/jade/include/**
" buffers
set hidden
" backup
set backup
set backupdir=~/backups/vim//
" paste
nnoremap <F11> :set invpaste<cr>
set pastetoggle=<F11>
" viminfo, see usr_21.txt, store marks, searches, etc.
"set viminfo='1000,f1,<500,:50,@10,/30
set viminfo='1000,f1,<500,:100,@100,/100,!,h,%
"set session

" to solve problem with alt, see http://stackoverflow.com/questions/6778961/alt-key-shortcuts-not-working-on-gnome-terminal-with-vim
" really needed to be able to use alt-b, alt-c, alt-l, alt-i in latex-suite
" (but latex-suite not replaced by vimtex + ultisnips)
let c='a'
while c <= 'z'
  exec "set <a-".c.">=\e".c
  exec "imap \e".c." <a-".c.">"
  let c = nr2char(1+char2nr(c))
endw
"set timeoutlen=1000 ttimeoutlen=50
" see https://www.johnhawthorn.com/2012/09/vi-escape-delays/
" vim's default: timeoutlen=1000 ttimeoutlen=100
set timeoutlen=1000 ttimeoutlen=100
" }}}

" Filetype settings ------------------------------------------- {{{
filetype on
filetype plugin on "
filetype indent on
filetype plugin indent on
" }}}

" File explorer ---------------------------------- {{{
let g:netrw_liststyle = 3
let g:netrw_winsize   = 15
let g:netrw_banner = 0
" This will toggle the file explorer on/off
nmap <leader>tt :Lex<CR> 
" }}}

" VimTex -------------------------------------- {{{
let g:tex_flavor = 'latex'
let g:vimtex_view_method = 'mupdf'
let g:vimtex_env_complete_list = [
            \ 'itemize',
            \ 'enumerate',
            \ 'description',
            \ 'center',
            \ 'figure',
            \ 'table',
            \ 'equation',
            \ 'eqnarray',
            \ 'solution',
            \ 'multline',
            \ 'align',
            \ 'split',
            \ '\[',
            \ ]
" let g:latex_latexmk_options =
"     \ ' -e '.shellescape('$success_cmd = "killall -HUP mupdf-x11";')
" }}}

" Dictionaries ------------------------------------------- {{{
set dictionary+=$HOME/.vim/dictionaries/dutch
set dictionary+=$HOME/.vim/dictionaries/british-english
" }}}

" Spelling -------------------------------------------------------- {{{
nnoremap <localleader>e :setlocal spell spelllang=en_us<CR>
nnoremap <localleader>n :setlocal spell spelllang=nl<CR>
nnoremap <localleader>s :setlocal spell!<CR>
set nospell
set spelllang=nl
" }}}

" Tags ------------------------------------------------------------ {{{
set tags+=./tags
set tags+=tags
" find tags back tot the root
set tags+=/
" from :h insert.txt, tags generated by
" ctags -R -f ~/.vim/tags/catkintags ~/catkin_ws/src
set tags+=~/.vim/tags/catkintags
" ctags -R -f ~/.vim/tags/rostags /opt/ros/jade/include
set tags+=~/.vim/tags/rostags
" ctags -R -f ~/.vim/tags/avrtags /usr/lib/avr/include
set tags+=~/.vim/tags/avrtags
" ctags -R -f ~/.vim/tags/systags /usr/include /usr/local/include
set tags+=~/.vim/tags/systags
" set tags+=~/.vim/tags/cpp

"set tags=$home/.vim/tags/tags,$home/.vim/tags/tags-py,./tags,./../tags,./*/tags

"map <leader>ct :!ctags -r --sort=yes --c++-kinds=+p --fields=+ias --extra=+q --language-force=c++ . <CR><CR>

"set csprg=gtags-cscope

"" ----- xolox/vim-easytags settings -----
"" Where to look for tags files
"set tags=./tags;,~/.vimtags
"" Sensible defaults
"let g:easytags_events = ['BufReadPost', 'BufWritePost']
"let g:easytags_async = 1
"let g:easytags_dynamic_files = 2
"let g:easytags_resolve_links = 1
"let g:easytags_suppress_ctags_warning = 1

" ----- majutsushi/tagbar settings -----
" Open/close tagbar with \b
"nmap <silent> <leader>b :TagbarToggle<CR>
" Uncomment to open tagbar automatically whenever possible
"autocmd BufEnter * nested :call tagbar#autoopen(0)

" }}}

" Global (?) ------------------------------------- {{{


" }}}

" Completion ------------------------------------ {{{
" Set the autocompletion menu to actually be useful. Will show
" all the available options when you press the <TAB> key.
set wildignore=*.o,*.pyc,*.pyo,*.class,*.git,*.hg,*swp,*.log,*.pdf
set wildmode=full
" Set omnicompletion menu settings.
"set completeopt=menu,menuone,preview
set completeopt=longest,menu,menuone,preview
" automatically open and close the popup menu / preview window      
au CursorMovedI,InsertLeave,CompleteDone * if pumvisible() == 0|silent! pclose|endif     
set omnifunc=syntaxcomplete#Complete

" VimCompletesMe (to prevent newline after <CR> in completion)
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
"}}}

" Snippets / Ultisnip ------------------------- {{{
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" let g:UltiSnipsExpandTrigger="<C-s>"
" let g:UltiSnipsListSnippets="<C-S-s>"
let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsListSnippets="<S-tab>"
let g:UltiSnipsListSnippets="<C-S-s>"
" use defaults: C-j (forward) and C-k (backward)
" let g:UltiSnipsJumpForwardTrigger="<C-b>"
" let g:UltiSnipsJumpBackwardTrigger="<C-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

" }}}

" C/C++ ---------------------------------------------------- {{{
" for dr. chips abbreviations for c
" http://www.drchip.org/astronaut/vim/index.html#cabbrv
set cino=>s,e0,n0,f0,{0,}4,^-1s,:0,=s,g0,h1s,p2,t0,+2,(2,)20,*30 
" }}}

" Mail --------------------------------------------------------- {{{
let g:mutt_aliases_file="~/.mutt/aliases"
" check attachment for mutt:
let g:attach_check_keywords = 'attached,enclosed,attachment,bijgevoegd,bijlage,bijlage'
" }}}

" Remind ----------------------------------- {{{
" mimic C-j from latex-suite, usefull for editting reminders from wyrd
nnoremap <silent> <C-j> f<vf>c
inoremap <silent> <C-j> <esc>f<vf>c
" }}}

" Notes ------------------------------------------------ {{{
let g:notes_directories = ['~/notes']
let g:notes_suffix = '.txt'
"
" }}}

" mappings for fast speed  ----------------------- {{{
inoremap jj <Esc>
"foldcolumn set to 4 or 0
nnoremap <leader>f :call <SID>FoldColumnToggle()<cr>
function! s:FoldColumnToggle()
    if &foldcolumn
        setlocal foldcolumn=0
    else
        setlocal foldcolumn=4
    endif
endfunction
" close current slit C-W q
" turn off <leader>c, is used for syntastic
"nnoremap <leader>c :execute "wincmd q"<cr>
" open/close quickfix:
nnoremap <leader>q :call <SID>QuickfixToggle()<CR>
let g:quickfix_is_open=0
function! s:QuickfixToggle()
    if g:quickfix_is_open
        cclose
        let g:quickfix_is_open = 0
        execute g:quickfix_return_to_window . "wincmd w"
    else
        let g:quickfix_return_to_window = winnr()
        copen
        let g:quickfix_is_open = 1
    endif
endfunction
"nnoremap <leader>tt :tabnew
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>z :waq!<CR>
nnoremap <leader>w :w!<CR>
nnoremap <leader>. :wq!<CR>
inoremap qqq <Esc>:wq!<CR>
"fast copying between vim sessions 
ab aW w! /tmp/vim_buffer.tmp.a 
ab aR r /tmp/vim_buffer.tmp.a
ab bW w! /tmp/vim_buffer.tmp.b 
ab bR r /tmp/vim_buffer.tmp.b

" }}}

" Useful mappings -------------------------------------- {{{
nnoremap <silent> L :SuperMan <cword><CR>:setlocal nonu<CR>
" when superman fails it makes current file unmodifiable and readonly,
" undo this with <leader>mod
nnoremap <silent> <leader>mod :set modifiable noreadonly<CR>
nnoremap <silent> M :!cppman <cword><CR><CR>
vnoremap <leader>" <esc>a"<esc>'<i"<esc>
" move line down
nnoremap - ddp
" move line up
nnoremap _ ddkP
vnoremap <C-c> "+y

"select a word
nnoremap <leader><space> viw
" make %% expand to %:h<Tab> in ex
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'
" }}}

" Solarized ------------------------------------- {{{
let g:solarized_termcolors=   256
let g:solarized_termtrans =   1
let g:solarized_degrade   =   0
let g:solarized_bold      =   1
let g:solarized_underline =   1
let g:solarized_italic    =   1
let g:solarized_contrast  =   "normal"
let g:solarized_visibility=   "normal"
let g:solarized_hitrail   =   0
let g:solarized_menu      =   0
" }}}

" Tmux -------------------------------------------------------- {{{
let g:tmux_navigator_no_mappings = 1
" from: https://github.com/christoomey/vim-tmux-navigator
nnoremap <silent> <C-A-h> :TmuxNavigateLeft<CR>
nnoremap <silent> <C-A-j> :TmuxNavigateDown<CR>
nnoremap <silent> <C-A-k> :TmuxNavigateUp<CR>
nnoremap <silent> <C-A-l> :TmuxNavigateRight<CR>
nnoremap <silent> <C-A-\> :TmuxNavigatePrevious<CR>
let g:tmux_navigator_save_on_switch = 1
" }}}

" Airline ----------------------------------------------------- {{{
"let g:airline_section_b = '%{strftime("%c")}'
"let g:airline_section_y = 'BN: %{bufnr("%")}'
"let g:airline_left_sep='>'
"let g:airline_right_sep='<'
let g:airline_detect_modified=1
let g:airline_detect_past=1
let g:airline_detect_iminsert=0
let g:airline_inactive_collapse=1
"let g:airline_theme="solarized"
let g:airline_theme="wombat"
"let g:airline_theme="wombat"
"powerline fonts still not working
let g:airline_powerline_fonts=1
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ '' : 'V',
    \ 's'  : 'S',
    \ 'S'  : 'S',
    \ '' : 'S',
    \ }
"let g:airline_exclude_filenames = [] " see source for current list
"let g:airline_exclude_filetypes = [] " see source for current list
let g:airline_exclude_preview = 0
let w:airline_disabled = 0

let g:airline#extensions#tabline#enabled = 0
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'



" }}}

" FZF quick finder --------------------------------------------------- {{{
"https://github.com/junegunn/fzf
set rtp+=~/.fzf
" }}}

" turning off things  ----------------------------------------- {{{
" (e.g. for quicker learning habbits (don't turn off <esc>, else
" problems with abbrev's with <esc>.
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <Shift><space> <C-o>a
" provide hjkl movements in Insert mode via the <Alt> modifier key
inoremap <A-h> <C-o>h
inoremap <A-j> <C-o>j
inoremap <A-k> <C-o>k
inoremap <A-l> <C-o>a
" }}}

" Autocommands ------------------------------------------ {{{
augroup my_auto_cmds
     autocmd!
     
     " misc
     autocmd filetype quicktask setlocal foldlevel=99
     autocmd filetype remind setlocal textwidth=500
     autocmd FileType make setlocal noexpandtab
     autocmd FileType vim setlocal foldmethod=marker

     " return to last edit position when opening files (you want this!) (http://amix.dk/vim/vimrc.html)
     autocmd bufreadpost *
          \ if line("'\"") > 0 && line("'\"") <= line("$") |
          \   exe "normal! g`\"" |
          \ endif
     
     "next line with dictionaries really slows down neocomplete
     "autocmd FileType * exec("setlocal dictionary+=".$HOME."/.vim/dictionaries/".expand('<amatch>'))

     "ctags: create specific tag files in 
     autocmd BufWritePost *.py,*.c,*.h,*.md call system("ctags -R *.{py,md,h,hpp,c,cpp}")
     autocmd BufWritePost *.tex call system("ctags -R *.tex")

     " python
     autocmd FileType python setlocal foldmethod=indent
     autocmd filetype python setlocal iskeyword+=.

     " c / c++
     autocmd filetype c setlocal cindent

     " xml / etc.
     "autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
     autocmd bufread,bufnewfile *.launch setfiletype roslaunch

     " mail
     autocmd bufread,bufnewfile *mutt-*              setfiletype mail
     autocmd filetype mail source ~/.vim/scripts/mutt-aliases.vim
     autocmd filetype mail setlocal spell
     autocmd filetype mail setlocal linebreak
     autocmd filetype mail setlocal foldlevel=1
     autocmd filetype mail setlocal tw=72
     autocmd filetype mail :iabbrev Beste Beste<CR><CR>Met vriendelijke groet,<CR>Rufus Fraanje<ESC>3kA
     autocmd filetype mail :iabbrev Hoi Hoi<CR><CR>Groeten,<CR>Rufus<ESC>3kA
     autocmd filetype mail :iabbrev Dear Dear<CR><CR>Best regards,<CR>Rufus Fraanje<ESC>3kA
     autocmd cursormoved,cursormovedi <buffer> call autoformat#mail()
     
     " tex / latex / text
     "autocmd filetype tex setlocal nofoldenable
     autocmd filetype tex setlocal iskeyword+=:
     autocmd filetype tex setlocal dictionary+=$HOME/.vim/dictionaries/tex-dictionary
     autocmd filetype tex setlocal shiftwidth=2
     autocmd filetype tex setlocal spell

augroup END

let delimitMate_expand_cr = 1
augroup mydelimitMate
  au!
  au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
  au FileType tex let b:delimitMate_quotes = ""
  au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
  au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
augroup END

" }}}

" my abbreviations  --------------------------------------- {{{
"source /home/rufus/.vim/fat-finger.vim

"iab BB Beste <CR><CR>Met vriendelijke groet,<CR>Rufus Fraanje<CR><ESC>2GWyW/Beste<CR>$pi,<CR>
"iab HH Hoi<CR><CR>Groeten,<CR>Rufus<CR><ESC><ESC>2GWyW/Hoi<CR>$pi,<CR>
"iab DD Dear<CR><CR>Best regards,<CR>Rufus Fraanje<CR><ESC>2GWyW/Dear<CR>$pi,<CR>
iab BB Blackboard
"iabbrev Beste Beste<CR><CR>Met vriendelijke groet,<CR>Rufus Fraanje<ESC>3kA
"iab Hoi Hoi<CR><CR>Groeten,<CR>Rufus<ESC>3kA
"iab Dear Dear<CR><CR>Best regards,<CR>Rufus Fraanje<ESC>3kA

iab coordinator coördinator
iab coordinatie coördinatie
iab stagecoordinator stagecoördinator
iab stageco stagecoördinator
iab stco stagecoördinator

iab gr Groeten,<CR>Rufus
iab vrgr Met vriendelijke groet,<CR>Rufus Fraanje
iab Vrgr Met vriendelijke groet,<CR>Rufus Fraanje
iab kire With kind regards,<CR>Rufus Fraanje
iab Kire With kind regards,<CR>Rufus Fraanje
iab bere Best regards,<CR>Rufus Fraanje
iab Bere Best regards,<CR>Rufus Fraanje

"iab ma maandag
"iab di dinsdag
"iab wo woensdag
"iab do donderdag
"iab vr vrijdag
"iab za zaterdag

"afkortingen (oa van http://www.meestgebruikte.nl/meest-gebruikte-afkortingen/):
iab adhv aan de hand van
iab bijv bijvoorbeeld
iab bgg bij geen gehoor
iab dmv door middel van
iab dwz dat wil zeggen
iab ea en andere
iab ed en dergelijke
iab eea een en andere
iab enz en zo voort
iab icm in combinatie met
iab ivm in verband met
iab idd inderdaad
iab iig in ieder geval
iab iii in eerste instantie
iab iei in eerste instantie
iab ipd in plaats daarvan
iab ipv in plaats van
iab ism in samenwerking met
iab maw met andere woorden 
iab mbv met behulp van
iab mbt met betrekking tot
iab mi mijns inziens
iab miv met ingang van
iab mmv met medewerking van
"iab mn met name
iab muv met uitzondering van
iab nav naar aanleiding van
iab ntb nader te bepalen
"iab nl namelijk
iab oa onder andere

iab tav ter attentie van
iab tbv ten behoeve van
iab tgv ten gevolge van
iab tnv ter name van
iab tov ten opzichte van
iab tzt te zijner tijd

iab ws waarschijnlijk
iab wsl waarschijnlijk
iab zgn zogenaamd
iab zsm zo snel mogelijk

" spelfouten (iab fout goed)
iab reiden rijden
iab beign begin
iab bewlo below


"english
"unabbrev adres
iab wrt with respect to

" other
"iabbrev @@ p.r.fraanje@hhs.nl

" tikZ


" }}}

augroup MyColors
    autocmd!
	autocmd ColorScheme * highlight LineNr ctermbg=7
	autocmd ColorScheme * highlight cursorline  ctermbg=7
augroup END
